// Generated by view binder compiler. Do not edit!
package org.meicode.myappweather.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.meicode.myappweather.R;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ConstraintLayout constraint;

  @NonNull
  public final ImageView imgTemperature;

  @NonNull
  public final ImageView imgTitle;

  @NonNull
  public final ImageView imgWater;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final RecyclerView recyclerView1;

  @NonNull
  public final RecyclerView recyclerView2;

  @NonNull
  public final TextView txtCloudy;

  @NonNull
  public final TextView txtHumidity;

  @NonNull
  public final TextView txtName123;

  @NonNull
  public final TextView txtTemperature;

  @NonNull
  public final TextView txtToday;

  @NonNull
  public final TextView txtWind;

  private FragmentHomeBinding(@NonNull ScrollView rootView, @NonNull ConstraintLayout constraint,
      @NonNull ImageView imgTemperature, @NonNull ImageView imgTitle, @NonNull ImageView imgWater,
      @NonNull LinearLayout linearLayout1, @NonNull LinearLayout linearLayout2,
      @NonNull RecyclerView recyclerView1, @NonNull RecyclerView recyclerView2,
      @NonNull TextView txtCloudy, @NonNull TextView txtHumidity, @NonNull TextView txtName123,
      @NonNull TextView txtTemperature, @NonNull TextView txtToday, @NonNull TextView txtWind) {
    this.rootView = rootView;
    this.constraint = constraint;
    this.imgTemperature = imgTemperature;
    this.imgTitle = imgTitle;
    this.imgWater = imgWater;
    this.linearLayout1 = linearLayout1;
    this.linearLayout2 = linearLayout2;
    this.recyclerView1 = recyclerView1;
    this.recyclerView2 = recyclerView2;
    this.txtCloudy = txtCloudy;
    this.txtHumidity = txtHumidity;
    this.txtName123 = txtName123;
    this.txtTemperature = txtTemperature;
    this.txtToday = txtToday;
    this.txtWind = txtWind;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraint;
      ConstraintLayout constraint = ViewBindings.findChildViewById(rootView, id);
      if (constraint == null) {
        break missingId;
      }

      id = R.id.img_temperature;
      ImageView imgTemperature = ViewBindings.findChildViewById(rootView, id);
      if (imgTemperature == null) {
        break missingId;
      }

      id = R.id.img_title;
      ImageView imgTitle = ViewBindings.findChildViewById(rootView, id);
      if (imgTitle == null) {
        break missingId;
      }

      id = R.id.img_water;
      ImageView imgWater = ViewBindings.findChildViewById(rootView, id);
      if (imgWater == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.recyclerView1;
      RecyclerView recyclerView1 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView1 == null) {
        break missingId;
      }

      id = R.id.recyclerView2;
      RecyclerView recyclerView2 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView2 == null) {
        break missingId;
      }

      id = R.id.txt_cloudy;
      TextView txtCloudy = ViewBindings.findChildViewById(rootView, id);
      if (txtCloudy == null) {
        break missingId;
      }

      id = R.id.txt_humidity;
      TextView txtHumidity = ViewBindings.findChildViewById(rootView, id);
      if (txtHumidity == null) {
        break missingId;
      }

      id = R.id.txt_name123;
      TextView txtName123 = ViewBindings.findChildViewById(rootView, id);
      if (txtName123 == null) {
        break missingId;
      }

      id = R.id.txt_temperature;
      TextView txtTemperature = ViewBindings.findChildViewById(rootView, id);
      if (txtTemperature == null) {
        break missingId;
      }

      id = R.id.txt_Today;
      TextView txtToday = ViewBindings.findChildViewById(rootView, id);
      if (txtToday == null) {
        break missingId;
      }

      id = R.id.txt_wind;
      TextView txtWind = ViewBindings.findChildViewById(rootView, id);
      if (txtWind == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, constraint, imgTemperature, imgTitle,
          imgWater, linearLayout1, linearLayout2, recyclerView1, recyclerView2, txtCloudy,
          txtHumidity, txtName123, txtTemperature, txtToday, txtWind);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
